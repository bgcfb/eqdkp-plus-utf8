/**
 * plugin.js
 *
 * Copyright, Moxiecode Systems AB
 * Released under LGPL License.
 *
 * License: http://www.tinymce.com/license
 * Contributing: http://www.tinymce.com/contributing
 */

/*global tinymce:true */

tinymce.PluginManager.add('eqdkp_raidloot', function(editor) {
	
	function showDialog(folderList) {
		var win, data, dom = editor.dom, imgElm = editor.selection.getNode();
		var width, height, imageListCtrl;
		
		data = {
			raid: 0,
			chars: 0,
		};
		
		function buildRaidList(relValue) {
			var raidItems = [];

			raidItems.push({
				text: "None",
				value: 0,
				selected: 0,
			});
			
			tinymce.each(folderList, function(rel) {
				raidItems.push({
					text: rel.text || rel.title,
					value: rel.value,
					selected: relValue === rel.value
				});
			});

			return raidItems;
		}

		if (imgElm.nodeName == "P" && imgElm.getAttribute('class') == "system-raidloot") {
			data = {
				raid: dom.getAttrib(imgElm, 'data-id'),
				chars: dom.getAttrib(imgElm, 'data-chars'),
			};
		} else {
			imgElm = null;
		}
		

		win = editor.windowManager.open({
			title: "Raidloot",
			data: data,
			body: [
				{name: 'raid', type: 'listbox', label: 'Select Raid', values: buildRaidList(data.raid)},
				{name: 'chars', type: 'checkbox', label: 'Show Attendees', checked: data.chars},
			],
			onSubmit: function(e) {
				var data = e.data;

				if (data.raid > 0){
					if (imgElm) {
						dom.setAttrib(imgElm, "data-id", data.raid);
						dom.setAttrib(imgElm, "data-chars", data.chars);
					} else {
						editor.insertContent('<p class="system-raidloot" data-id="'+data.raid+'" data-chars="'+data.chars+'"></p><p></p>');
					}
				}

				
			}
		});
	}
	
	function prepareDialog(){
		jQuery.get(editor.baseURI.source+"/plugins/eqdkp_raidloot/get_raids.php"+mmocms_sid, function(retdata){
			if(retdata.status == 'ok'){
				var raidItems = [];
				
				jQuery.each(retdata.raids, function(key, value) {
					raidItems.push({
						text: value.name,
						value: value.id,
						selected: 0,
					});	
				});
								
				showDialog(raidItems);
			} else {
				alert('Error while reading raids.');
			}
		}, "json");

	}

	editor.addButton('eqdkp_raidloot', {
		icon: 'trophy',
		tooltip: 'Insert Raidloot',
		onclick: prepareDialog,
		stateSelector: 'p.system-raidloot'
	});

	editor.addMenuItem('eqdkp_raidloot', {
		icon: 'trophy',
		text: 'Insert Raidloot',
		onclick: prepareDialog,
		context: 'insert',
		prependToContext: true
	});
});